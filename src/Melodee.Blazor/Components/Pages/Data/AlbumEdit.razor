@page "/data/album/{ApiKey:guid}/edit"

@inherits MelodeeComponentBase
@attribute [Authorize(Roles = "Administrator,Editor")]
@using Melodee.Common.Data.Models
@using Melodee.Common.Data.Models.Extensions
@using NodaTime
@using Album = Melodee.Common.Data.Models.Album
@using Artist = Melodee.Common.Data.Models.Artist

@inject MainLayoutProxyService MainLayoutProxyService
@inject ILogger Logger
@inject IMelodeeConfigurationFactory ConfigurationFactory
@inject AlbumService AlbumService
@inject NotificationService NotificationService
@inject DialogService DialogService
@inject NavigationManager NavigationManager


<PageTitle>Album Add/Edit</PageTitle>

<RadzenBreadCrumb Class="rz-pb-5">
    <RadzenBreadCrumbItem Path="/" Text="Dashboard"/>
    <RadzenBreadCrumbItem Path="/data/albums" Text="Albums"/>
    @if (ApiKey != Guid.Empty)
    {
        <RadzenBreadCrumbItem Path=@($"/data/album/{_album.ApiKey}") Text="@(_album.Name)"/>
    }
    <RadzenBreadCrumbItem Icon="@(ApiKey == Guid.Empty ? "add" : "edit")"
                          Text="@(ApiKey == Guid.Empty ? "Adding" : "Editing")"/>
</RadzenBreadCrumb>

<RadzenStack>
    <RadzenRow Gap="10px" RowGap="1rem" class="rz-m-0 rz-m-md-2">
        <RadzenColumn Size="12" SizeMD="4">
            @if (_isLoading)
            {
                <RadzenProgressBarCircular
                    ProgressBarStyle="ProgressBarStyle.Primary"
                    Value="100"
                    ShowValue="false"
                    Mode="ProgressBarMode.Indeterminate"/>
            }
            else
            {
                <RadzenImage
                    Path=@($"/images/{_album.ToApiKey()}/{ ImageSize.Medium }")
                    Style="margin-right: 5px; width: 100%; height: auto;"
                    AlternateText="@_album.Name"/>
            }
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="8">
            <RadzenTemplateForm TItem="Album" Data="@_album" Submit="@OnSubmit">
                <RadzenFieldset>
                    <RadzenStack Gap="20px" class="rz-p-2 rz-p-md-1">
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Locked" Component="IsLocked"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <RadzenSwitch @bind-Value="@_album.IsLocked" Name="@nameof(Album.IsLocked)"/>
                            </RadzenColumn>
                        </RadzenRow>
                        @* <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem"> *@
                        @*     <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end"> *@
                        @*         <RadzenLabel Text="Artist" Component="Artist"/> *@
                        @*     </RadzenColumn> *@
                        @*     <RadzenColumn Size="12" SizeMD="10"> *@
                        @*         <RadzenAutoComplete *@
                        @*             @bind-Value="@_artistName" *@
                        @*             @bind-SelectedItem="@_selectedArtist" *@
                        @*             name="Artist" *@
                        @*             Data="@_artistSearchResults" *@
                        @*             TextProperty="@nameof(ArtistSearchResult.Name)" *@
                        @*             LoadData="@OnLoadMusicBrainzArtistData" *@
                        @*             class="rz-w-100" *@
                        @*             InputAttributes="@(new Dictionary<string, object> { { "aria-label", "Artist Name" } })"/> *@
                        @*     </RadzenColumn> *@
                        @* </RadzenRow> *@
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Name" Component="Name"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <RadzenTextBox style="display: block" Name="Name" @bind-Value="@_album.Name"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="Name" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Release Date" Component="ReleaseDate"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <RadzenDatePicker
                                    style="display: block"
                                    Name="ReleaseDate"
                                    DateFormat="MM/dd/yyyy"
                                    @bind-Value="@_releaseDate"
                                    class="rz-w-100"/>
                                <RadzenRequiredValidator Component="ReleaseDate" Text="Release Date is required"
                                                         Popup="false" Style="position: absolute"/>
                            </RadzenColumn>
                        </RadzenRow>

                        @* Below is all optional *@
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Alternate Names" Component="AlternateNames"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <TagsInput Value="@_alternateNames"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Amg Id" Component="AmgId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="AmgId" @bind-Value="@_album.AmgId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="AmgId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("AmgId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Description" Component="Description"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <MarkdownEditor UploadImage="false" Value="@_album.Description"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Deezer Id" Component="DeezerId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenNumeric style="display: block" Name="DeezerId" @bind-Value="@_album.DeezerId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="DeezerId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("DeezerId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Discogs Id" Component="DiscogsId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="DiscogsId" @bind-Value="@_album.DiscogsId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="DiscogsId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("DiscogsId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Genres" Component="AlternateNames"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <TagsInput Value="@_genres"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="ITunes Id" Component="ItunesId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="ItunesId" @bind-Value="@_album.ItunesId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="ItunesId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("ItunesId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="LastFm Id" Component="LastFmId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="LastFmId" @bind-Value="@_album.LastFmId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="LastFmId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("LastFmId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Notes" Component="Notes"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <MarkdownEditor UploadImage="false" Value="@_album.Notes"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Sort Name" Component="SortName"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <RadzenTextBox style="display: block" Name="SortName" @bind-Value="@_album.SortName"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="SortName" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Sort Order" Component="SortOrder"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <RadzenNumeric style="display: block" Name="SortOrder" @bind-Value="@_album.SortOrder"
                                               class="rz-w-100"
                                               InputAttributes="@(new Dictionary<string, object> { { "aria-label", "enter value" } })"/>
                                <RadzenDataAnnotationValidator Component="SortOrder" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Spotify Id" Component="SpotifyId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="SpotifyId" @bind-Value="@_album.SpotifyId"
                                               class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="SpotifyId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("SpotifyId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="Tags" Component="AlternateNames"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="10">
                                <TagsInput Value="@_tags"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenLabel Text="WikiData Id" Component="WikiDataId"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox style="display: block" Name="WikiDataId"
                                               @bind-Value="@_album.WikiDataId" class="rz-w-100"/>
                                <RadzenDataAnnotationValidator Component="WikiDataId" Popup="false"
                                                               Style="position: absolute"/>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="2" class="rz-text-align-start rz-text-align-md-end">
                                <RadzenButton Icon="search" Text="Search"
                                              Click="@(() => SearchForExternalButtonClick("WikiDataId"))"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center" class="rz-mt-4">
                            <RadzenColumn Size="12" Offset="0" SizeMD="8" OffsetMD="2">
                                <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenTemplateForm>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

@code {

    bool _isLoading = true;

    List<string> _alternateNames = [];
    List<KeyValue> _musicBrainzAlbums = [];
    List<string> _tags = [];
    List<string> _genres = [];

    [Parameter] public Guid ApiKey { get; set; }

    DateOnly _releaseDate = DateOnly.FromDateTime(DateTime.Now);

    string _libraryName = string.Empty;

    Album _album = new()
    {
        Artist = new Artist
        {
            Library = new Library
            {
                Name = string.Empty,
                Path = string.Empty,
                Type = 0,
                CreatedAt = default
            },
            Name = string.Empty,
            NameNormalized = string.Empty,
            Directory = string.Empty,
            LibraryId = 0,
            CreatedAt = default
        },
        Name = string.Empty,
        NameNormalized = string.Empty,
        Directory = string.Empty,
        CreatedAt = default
    };

    protected override async Task OnParametersSetAsync()
    {
        MainLayoutProxyService.ToggleSpinnerVisible();
        try
        {
            var albumResult = await AlbumService.GetByApiKeyAsync(ApiKey);
            if (albumResult.IsSuccess)
            {
                _album = albumResult.Data!;
                _alternateNames = _album.AlternateNames?.ToTags()?.ToList() ?? [];
                _tags = _album.Tags?.ToTags()?.ToList() ?? [];
                _genres = _album.Genres?.ToList() ?? [];
                _releaseDate = _album.ReleaseDate.ToDateOnly();
            }
        }
        finally
        {
            MainLayoutProxyService.ToggleSpinnerVisible();
            _isLoading = false;
        }
    }


    async Task OnSubmit(Album model)
    {
        MainLayoutProxyService.ToggleSpinnerVisible();

        try
        {
            _album.AlternateNames = "".AddTags(_alternateNames, doNormalize: true);
            _album.Tags = "".AddTags(_tags);
            _album.Genres = _genres.ToArray();
            _album.ReleaseDate = LocalDate.FromDateOnly(_releaseDate);

            if (ApiKey == Guid.Empty)
            {
                var addResult = await AlbumService.AddAlbumAsync(_album);
                if (addResult.IsSuccess)
                {
                    NavigationManager.NavigateTo("/data/albums");
                    return;
                }

                NotificationService.Notify(NotificationMessageForResult(addResult, "Adding Album", ToastTime));
            }
            else
            {
                var saveResult = await AlbumService.UpdateAsync(_album);
                if (saveResult.IsSuccess)
                {
                    NavigationManager.NavigateTo($"/data/album/{ApiKey}");
                    return;
                }

                NotificationService.Notify(NotificationMessageForResult(saveResult, "Editing Album", ToastTime));
            }
        }
        catch (Exception ex)
        {
            Logger.Error(ex, "Attempting to edit [{ApiKey}]", ApiKey);
        }
        finally
        {
            MainLayoutProxyService.ToggleSpinnerVisible();
        }
    }

    private Task SearchForExternalButtonClick(string amgid)
    {
        throw new NotImplementedException();
    }

}


